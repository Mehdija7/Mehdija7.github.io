{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmin\\\\Desktop\\\\portofolio\\\\src\\\\AnimatedSVG\\\\AnimatedSVG.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedSVG = () => {\n  _s();\n  const [animate, setAnimate] = useState(false);\n  useEffect(() => {\n    const handleIntersection = (entries, observer) => {\n      entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n          return;\n          //observer.unobserve(entry.target);\n        }\n        setAnimate(true);\n      });\n    };\n    const animatedSection = document.getElementById(\"animatedSection\");\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.5\n    });\n    observer.observe(animatedSection);\n\n    // Clean up the observer when the component unmounts\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"animatedSection\",\n    className: `animated-section ${animate ? \"animate\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"top\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"25\",\n          cy: \"25\",\n          r: \"20\",\n          fill: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"25\",\n          cy: \"25\",\n          r: \"20\",\n          fill: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"25\",\n          cy: \"25\",\n          r: \"20\",\n          fill: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"right\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"25\",\n          cy: \"25\",\n          r: \"20\",\n          fill: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedSVG, \"z07FJ1oDfa7+qdGd0fWFFN4Jr94=\");\n_c = AnimatedSVG;\nexport default AnimatedSVG;\nvar _c;\n$RefreshReg$(_c, \"AnimatedSVG\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","AnimatedSVG","_s","animate","setAnimate","handleIntersection","entries","observer","forEach","entry","isIntersecting","animatedSection","document","getElementById","IntersectionObserver","threshold","observe","disconnect","id","className","children","cx","cy","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elmin/Desktop/portofolio/src/AnimatedSVG/AnimatedSVG.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst AnimatedSVG = () => {\r\n  const [animate, setAnimate] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleIntersection = (entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (!entry.isIntersecting) {\r\n          return;\r\n          //observer.unobserve(entry.target);\r\n        }\r\n        setAnimate(true);\r\n      });\r\n    };\r\n\r\n    const animatedSection = document.getElementById(\"animatedSection\");\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      threshold: 0.5,\r\n    });\r\n\r\n    observer.observe(animatedSection);\r\n\r\n    // Clean up the observer when the component unmounts\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <section\r\n      id=\"animatedSection\"\r\n      className={`animated-section ${animate ? \"animate\" : \"\"}`}\r\n    >\r\n      <div className=\"svg-container\">\r\n        <svg className=\"top\">\r\n          <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />\r\n        </svg>\r\n        <svg className=\"bottom\">\r\n          <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />\r\n        </svg>\r\n        <svg className=\"left\">\r\n          <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />\r\n        </svg>\r\n        <svg className=\"right\">\r\n          <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />\r\n        </svg>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\nexport default AnimatedSVG;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMO,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;MAChDD,OAAO,CAACE,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAI,CAACA,KAAK,CAACC,cAAc,EAAE;UACzB;UACA;QACF;QACAN,UAAU,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC;IAED,MAAMO,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IAClE,MAAMN,QAAQ,GAAG,IAAIO,oBAAoB,CAACT,kBAAkB,EAAE;MAC5DU,SAAS,EAAE;IACb,CAAC,CAAC;IAEFR,QAAQ,CAACS,OAAO,CAACL,eAAe,CAAC;;IAEjC;IACA,OAAO,MAAMJ,QAAQ,CAACU,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IACEkB,EAAE,EAAC,iBAAiB;IACpBC,SAAS,EAAG,oBAAmBhB,OAAO,GAAG,SAAS,GAAG,EAAG,EAAE;IAAAiB,QAAA,eAE1DpB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BpB,OAAA;QAAKmB,SAAS,EAAC,KAAK;QAAAC,QAAA,eAClBpB,OAAA;UAAQqB,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,CAAC,EAAC,IAAI;UAACC,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN5B,OAAA;QAAKmB,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBpB,OAAA;UAAQqB,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,CAAC,EAAC,IAAI;UAACC,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN5B,OAAA;QAAKmB,SAAS,EAAC,MAAM;QAAAC,QAAA,eACnBpB,OAAA;UAAQqB,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,CAAC,EAAC,IAAI;UAACC,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN5B,OAAA;QAAKmB,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBpB,OAAA;UAAQqB,EAAE,EAAC,IAAI;UAACC,EAAE,EAAC,IAAI;UAACC,CAAC,EAAC,IAAI;UAACC,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9CID,WAAW;AAAA4B,EAAA,GAAX5B,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}