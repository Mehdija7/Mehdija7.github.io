{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elmin\\\\Desktop\\\\portofolio\\\\src\\\\AnimatedSVG\\\\AnimatedSVG.js\",\n  _s = $RefreshSig$();\n// AnimatedSection.js\nimport React, { useEffect } from \"react\";\nimport classes from \"./AnimatedSVG.module.css\";\nimport GitHubIcon from \"../Icons/GitHubIcon\";\nimport LinkedinIcon from \"../Icons/Linkedin\";\nimport PdfIcon from \"../Icons/PdfIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedSection = () => {\n  _s();\n  useEffect(() => {\n    const createSVGElement = direction => {\n      const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n      svg.setAttribute(\"width\", \"50\");\n      svg.setAttribute(\"height\", \"50\");\n      svg.innerHTML = `<circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />`;\n      if (direction === \"top\") {\n        svg.style.transform = \"translateY(-100%)\";\n      } else if (direction === \"bottom\") {\n        svg.style.transform = \"translateY(100%)\";\n      } else if (direction === \"left\") {\n        svg.style.transform = \"translateX(-100%)\";\n      } else if (direction === \"right\") {\n        svg.style.transform = \"translateX(100%)\";\n      }\n      return svg;\n    };\n    const handleIntersection = (entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const svgTop = createSVGElement(\"top\");\n          const svgBottom = createSVGElement(\"bottom\");\n          const svgLeft = createSVGElement(\"left\");\n          const svgRight = createSVGElement(\"right\");\n          entry.target.appendChild(svgTop);\n          entry.target.appendChild(svgBottom);\n          entry.target.appendChild(svgLeft);\n          entry.target.appendChild(svgRight);\n          entry.target.querySelectorAll(\"svg\").forEach(svg => {\n            svg.style.transition = \"transform 1s ease\";\n            svg.style.transform = \"translate(0, 0)\";\n          });\n          observer.unobserve(entry.target);\n        }\n      });\n    };\n    const animatedSection = document.getElementById(\"animatedSection\");\n    const observer = new IntersectionObserver(handleIntersection, {\n      threshold: 0.5\n    });\n    observer.observe(animatedSection);\n\n    // Clean up the observer when the component unmounts\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"animatedSection\",\n    className: classes.animatedSection,\n    children: [/*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkedinIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PdfIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedSection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AnimatedSection;\nexport default AnimatedSection;\nvar _c;\n$RefreshReg$(_c, \"AnimatedSection\");","map":{"version":3,"names":["React","useEffect","classes","GitHubIcon","LinkedinIcon","PdfIcon","jsxDEV","_jsxDEV","AnimatedSection","_s","createSVGElement","direction","svg","document","createElementNS","setAttribute","innerHTML","style","transform","handleIntersection","entries","observer","forEach","entry","isIntersecting","svgTop","svgBottom","svgLeft","svgRight","target","appendChild","querySelectorAll","transition","unobserve","animatedSection","getElementById","IntersectionObserver","threshold","observe","disconnect","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/elmin/Desktop/portofolio/src/AnimatedSVG/AnimatedSVG.js"],"sourcesContent":["// AnimatedSection.js\r\nimport React, { useEffect } from \"react\";\r\nimport classes from \"./AnimatedSVG.module.css\";\r\nimport GitHubIcon from \"../Icons/GitHubIcon\";\r\nimport LinkedinIcon from \"../Icons/Linkedin\";\r\nimport PdfIcon from \"../Icons/PdfIcon\";\r\n\r\nconst AnimatedSection = () => {\r\n  useEffect(() => {\r\n    const createSVGElement = (direction) => {\r\n      const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n      svg.setAttribute(\"width\", \"50\");\r\n      svg.setAttribute(\"height\", \"50\");\r\n      svg.innerHTML = `<circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"blue\" />`;\r\n\r\n      if (direction === \"top\") {\r\n        svg.style.transform = \"translateY(-100%)\";\r\n      } else if (direction === \"bottom\") {\r\n        svg.style.transform = \"translateY(100%)\";\r\n      } else if (direction === \"left\") {\r\n        svg.style.transform = \"translateX(-100%)\";\r\n      } else if (direction === \"right\") {\r\n        svg.style.transform = \"translateX(100%)\";\r\n      }\r\n\r\n      return svg;\r\n    };\r\n\r\n    const handleIntersection = (entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          const svgTop = createSVGElement(\"top\");\r\n          const svgBottom = createSVGElement(\"bottom\");\r\n          const svgLeft = createSVGElement(\"left\");\r\n          const svgRight = createSVGElement(\"right\");\r\n\r\n          entry.target.appendChild(svgTop);\r\n          entry.target.appendChild(svgBottom);\r\n          entry.target.appendChild(svgLeft);\r\n          entry.target.appendChild(svgRight);\r\n\r\n          entry.target.querySelectorAll(\"svg\").forEach((svg) => {\r\n            svg.style.transition = \"transform 1s ease\";\r\n            svg.style.transform = \"translate(0, 0)\";\r\n          });\r\n\r\n          observer.unobserve(entry.target);\r\n        }\r\n      });\r\n    };\r\n\r\n    const animatedSection = document.getElementById(\"animatedSection\");\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      threshold: 0.5,\r\n    });\r\n\r\n    observer.observe(animatedSection);\r\n\r\n    // Clean up the observer when the component unmounts\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <section id=\"animatedSection\" className={classes.animatedSection}>\r\n      <GitHubIcon />\r\n      <LinkedinIcon />\r\n      <PdfIcon />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AnimatedSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}